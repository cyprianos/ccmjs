#! /usr/bin/env node

var ccm = require('../ccm.js');
var fs = require('fs');
var util = require('util');
var glob = require('glob');
var minimatch = require('minimatch');
var argv = require('optimist')
            .usage('Usage: $0 --files "files/to/**/include/*.js" [--results num] [--exclude "files/to/**/exclude/*.js]')
            .demand(['files'])
            .default('encoding', 'utf8')
            .default('results', '25')
            .argv;

var exclude;
if(argv.exclude) {
  exclude = String.prototype.split.call(argv.exclude, ',');
}

var topResult = ccm.createResult(parseInt(argv.results));
glob(argv.files, function(err, files) {

  files.forEach(function(file) {
    var i, len;
    if(exclude) {
      for(i = 0, len = exclude.length; i < len; i += 1) {
        if(minimatch(file, exclude[i])) {
          return;
        }
      }
    };

    try {
      var fileContent = fs.readFileSync(file, { encoding: argv.encoding });
      var res = ccm.calculate( fileContent );
      topResult.addResults(file, res);
    } catch(err) {
      console.error('\nError while parsing file: ' + file);
      console.error(err.toString());
    }
  });

    ccm.formatResult(topResult).forEach(function(res) {
      console.log(res);
    });
});


